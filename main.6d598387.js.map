{"version":3,"sources":["scripts/main.js"],"names":["document","addEventListener","cells","querySelectorAll","startButton","querySelector","scoreDisplay","winMessage","loseMessage","startMessage","score","board","gameOver","updateBoard","i","j","cell","value","textContent","className","generateNumber","emptyCells","push","row","col","length","Math","floor","random","updateScore","move","direction","moved","k","checkWin","classList","remove","checkAvailableMoves","evnt","key","startGame","Array","from","add"],"mappings":"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","file":"main.6d598387.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const cells = document.querySelectorAll('.field-cell');\n  const startButton = document.querySelector('.button.start');\n  const scoreDisplay = document.querySelector('.game-score');\n  const winMessage = document.querySelector('.message-win');\n  const loseMessage = document.querySelector('.message-lose');\n  const startMessage = document.querySelector('.message-start');\n\n  let score = 0;\n  let board = [];\n  let gameOver = false;\n\n  function startGame() {\n    board = Array.from({ length: 4 }, () => Array.from({ length: 4 }, () => 0));\n    gameOver = false;\n    score = 0;\n    updateScore();\n    winMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n    startMessage.classList.add('hidden');\n\n    generateNumber();\n    generateNumber();\n    updateBoard();\n    startButton.textContent = 'Restart';\n    startButton.classList.add('restart');\n  }\n\n  function updateBoard() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        const cell = cells[i * 4 + j];\n        const value = board[i][j];\n\n        cell.textContent = value !== 0 ? value : '';\n        cell.className = `field-cell field-cell--${value}`;\n      }\n    }\n  }\n\n  function generateNumber() {\n    const emptyCells = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 0) {\n          emptyCells.push({\n            row: i, col: j,\n          });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const { row, col }\n      = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      board[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  function updateScore() {\n    scoreDisplay.textContent = score;\n  }\n\n  function move(direction) {\n    if (gameOver) {\n      return;\n    }\n\n    let moved = false;\n\n    if (direction === 'left') {\n      for (let i = 0; i < 4; i++) {\n        for (let j = 1; j < 4; j++) {\n          if (board[i][j] !== 0) {\n            let k = j - 1;\n\n            while (k >= 0 && board[i][k] === 0) {\n              board[i][k] = board[i][k + 1];\n              board[i][k + 1] = 0;\n              k--;\n              moved = true;\n            }\n\n            if (k >= 0 && board[i][k] === board[i][k + 1]) {\n              board[i][k] *= 2;\n              score += board[i][k];\n              board[i][k + 1] = 0;\n              moved = true;\n            }\n          }\n        }\n      }\n    } else if (direction === 'right') {\n      for (let i = 0; i < 4; i++) {\n        for (let j = 2; j >= 0; j--) {\n          if (board[i][j] !== 0) {\n            let k = j + 1;\n\n            while (k < 4 && board[i][k] === 0) {\n              board[i][k] = board[i][k - 1];\n              board[i][k - 1] = 0;\n              k++;\n              moved = true;\n            }\n\n            if (k < 4 && board[i][k] === board[i][k - 1]) {\n              board[i][k] *= 2;\n              score += board[i][k];\n              board[i][k - 1] = 0;\n              moved = true;\n            }\n          }\n        }\n      }\n    } else if (direction === 'up') {\n      for (let j = 0; j < 4; j++) {\n        for (let i = 1; i < 4; i++) {\n          if (board[i][j] !== 0) {\n            let k = i - 1;\n\n            while (k >= 0 && board[k][j] === 0) {\n              board[k][j] = board[k + 1][j];\n              board[k + 1][j] = 0;\n              k--;\n              moved = true;\n            }\n\n            if (k >= 0 && board[k][j] === board[k + 1][j]) {\n              board[k][j] *= 2;\n              score += board[k][j];\n              board[k + 1][j] = 0;\n              moved = true;\n            }\n          }\n        }\n      }\n    } else if (direction === 'down') {\n      for (let j = 0; j < 4; j++) {\n        for (let i = 2; i >= 0; i--) {\n          if (board[i][j] !== 0) {\n            let k = i + 1;\n\n            while (k < 4 && board[k][j] === 0) {\n              board[k][j] = board[k - 1][j];\n              board[k - 1][j] = 0;\n              k++;\n              moved = true;\n            }\n\n            if (k < 4 && board[k][j] === board[k - 1][j]) {\n              board[k][j] *= 2;\n              score += board[k][j];\n              board[k - 1][j] = 0;\n              moved = true;\n            }\n          }\n        }\n      }\n    }\n\n    if (moved) {\n      generateNumber();\n      updateBoard();\n\n      if (checkWin()) {\n        winMessage.classList.remove('hidden');\n        gameOver = true;\n      }\n\n      if (!checkAvailableMoves()) {\n        loseMessage.classList.remove('hidden');\n        gameOver = true;\n      }\n\n      updateScore();\n      startButton.textContent = 'Restart';\n    }\n  }\n\n  function checkAvailableMoves() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 0) {\n          return true;\n        }\n\n        if (i > 0 && board[i][j] === board[i - 1][j]) {\n          return true;\n        }\n\n        if (i < 3 && board[i][j] === board[i + 1][j]) {\n          return true;\n        }\n\n        if (j > 0 && board[i][j] === board[i][j - 1]) {\n          return true;\n        }\n\n        if (j < 3 && board[i][j] === board[i][j + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  function checkWin() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 2048) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  document.addEventListener('keydown', (evnt) => {\n    if (evnt.key === 'ArrowLeft') {\n      move('left');\n    } else if (evnt.key === 'ArrowRight') {\n      move('right');\n    } else if (evnt.key === 'ArrowUp') {\n      move('up');\n    } else if (evnt.key === 'ArrowDown') {\n      move('down');\n    }\n  });\n\n  startButton.addEventListener('click', startGame);\n});\n"]}